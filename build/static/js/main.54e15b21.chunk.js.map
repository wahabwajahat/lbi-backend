{"version":3,"sources":["actions/errorActions.js","actions/types.js","components/auth/RegisterModal.js","actions/authActions.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","auth","dispatch","body","JSON","stringify","axios","post","headers","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","authLinks","NavItem","guestLinks","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","initialState","token","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54e15b21.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass RegisterModal extends Component {\n  state = {\n    modal: false,\n    name: '',\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href='#'>\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color='danger'>{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for='name'>Name</Label>\n                <Input\n                  type='text'\n                  name='name'\n                  id='name'\n                  placeholder='Name'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='email'>Email</Label>\n                <Input\n                  type='email'\n                  name='email'\n                  id='email'\n                  placeholder='Email'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='password'>Password</Label>\n                <Input\n                  type='password'\n                  name='password'\n                  id='password'\n                  placeholder='Password'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(RegisterModal);","import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from './types';\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get('https://lbi-probono.herokuapp.com/api/auth/user', tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post('https://lbi-probono.herokuapp.com/api/auth/register', body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('https://lbi-probono.herokuapp.com/api/auth/login', body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass LoginModal extends Component {\n  state = {\n    modal: false,\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attempt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href='#'>\n          Login\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color='danger'>{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for='email'>Email</Label>\n                <Input\n                  type='email'\n                  name='email'\n                  id='email'\n                  placeholder='Email'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n\n                <Label for='password'>Password</Label>\n                <Input\n                  type='password'\n                  name='password'\n                  id='password'\n                  placeholder='Password'\n                  className='mb-3'\n                  onChange={this.onChange}\n                />\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Login\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, clearErrors }\n)(LoginModal);","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <NavLink onClick={this.props.logout} href='#'>\n          Logout\n        </NavLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);","import React, { Component, Fragment } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RegisterModal from './auth/RegisterModal';\nimport LoginModal from './auth/LoginModal';\nimport Logout from './auth/Logout';\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <Fragment>\n        <NavItem>\n          <span className='navbar-text mr-3'>\n            <strong>{user ? `Welcome ${user.name}` : ''}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar color='dark' dark expand='sm' className='mb-5'>\n          <Container>\n            <NavbarBrand href='/'>LBI Probono</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AppNavbar);","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n  } from '../actions/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case USER_LOADING:\n        return {\n          ...state,\n          isLoading: true\n        };\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          user: action.payload\n        };\n      case LOGIN_SUCCESS:\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.token);\n        return {\n          ...state,\n          ...action.payload,\n          isAuthenticated: true,\n          isLoading: false\n        };\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false\n        };\n      default:\n        return state;\n    }\n  }","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  error: errorReducer,\n  auth: authReducer\n});","\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store;","\nimport React, { Component } from 'react';\nimport AppNavbar from './components/AppNavbar';\nimport { Container } from 'reactstrap';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authActions';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    // store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className='App'>\n          <AppNavbar />\n          <Container>\n          </Container>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}